GET/configuration=Form for upload of Job configuration file
POST/job-configuration=Upload a Job configuration file as a String request body
GET/files=List uploaded data files 
POST/files=Upload a new file (in a multipart form request) with path= and file= paremeters.
DELETE/files=Remove a file that was previously uploaded.  Add pattern= parameter to narrow down to a subset of existing resources.
GET/files/{path}=Download a previously uploaded file.  The path can contain directory separators.
GET/home=List the resources available
GET/jobs=List the jobs known to the application.  If they are configured in this application they are launchable, otherwise not (i.e. if they have been executed offline)
GET/jobs/executions=List all the job executions, in order of most recent to least.
DELETE/jobs/executions=Stop all job executions
GET/jobs/executions/{jobExecutionId}=Show the JobExecution with the id provided
DELETE/jobs/executions/{jobExecutionId}=Stop the JobExecution with the id provided.  Add abort=true parameter to abort an already stopped or failed job.
GET/jobs/executions/{jobExecutionId}/steps=List the StepExecutions of the JobExecution with the id provided
GET/jobs/executions/{jobExecutionId}/steps/{stepExecutionId}=Inspect the StepExecution with the id provided
GET/jobs/executions/{jobExecutionId}/steps/{stepExecutionId}/progress=Monitor the progress of the StepExecution with the id provided
GET/jobs/{jobName}=List the JobInstances of the job name provided
POST/jobs/{jobName}=Execute the job with the name provided and parameters provided as a String (stringified Properties as per the CommandLineJobRunner)
GET/jobs/{jobName}/executions=List the JobExecutions for the job name provided
GET/jobs/{jobName}/{jobInstanceId}/executions=List the JobExecutions for the job instance with the id provided
POST/jobs/{jobName}/{jobInstanceId}/executions=Stop the JobExecutions for the job instance with the id provided
